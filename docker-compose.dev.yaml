networks:
  service-provider-app-network:
    driver: bridge

services:
  service-provider-app:
    build:
      context: .
      dockerfile: .docker/dev/Dockerfile
    container_name: service_provider
    env_file:
      - .env
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - service-provider-app-db
      - service-provider-app-redis
    ports:
      - "9000:9000"
    networks:
      - service-provider-app-network

  service-provider-app-nginx:
    image: nginx:alpine
    container_name: service_provider_nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8002:80"
    volumes:
      - .:/var/www/html
      - .docker/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - service-provider-app
    networks:
      - service-provider-app-network

  service-provider-app-db:
    image: mysql:8.2
    container_name: service_provider_db
    restart: unless-stopped
    tty: true
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    networks:
      - service-provider-app-network

  service-provider-app-redis:
    image: redis:7-alpine
    container_name: service_provider_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - service-provider-app-network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
